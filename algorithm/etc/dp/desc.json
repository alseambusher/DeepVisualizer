{
  "Dynamic Programming": "Dynamic programming is both a mathematical optimization method and a computer programming method. In both contexts it refers to simplifying a complicated problem by breaking it down into simpler sub-problems in a recursive manner.",
  "Complexity": {
    "time": "varies",
    "space": "varies"
  },
  "References": [
    "<a href='https://en.wikipedia.org/wiki/Dynamic_programming'>Wikipedia</a>"
  ],
  "files": {
    "fibonacci": "Fibonacci Sequence",
    "sliding_window": "Finding the largest sum of three contiguous number",
    "max_sum_path": "Finding the maximum sum in a path from (0, 0) to (N-1, M-1) when can only move to right or down",
    "longest_increasing_subsequence": "Find the length of the longest subsequence of a given sequence such that all elements of the subsequence are sorted in increasing order",
    "max_subarray": "Find the sum of the maximum Subarray in the given Array",
    "knapsack_problem": "Given a set of items, each with a weight and a value, determine the number of each item to include in a collection so that the total weight is less than or equal to a given limit and the total value is as large as possible."
  }
}